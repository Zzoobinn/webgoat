# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, builds an image, performs a container image
# scan with Anchore's Syft tool, and uploads the results to the GitHub Dependency
# submission API.

# For more information on the Anchore sbom-action usage
# and parameters, see https://github.com/anchore/sbom-action. For more
# information about the Anchore SBOM tool, Syft, see
# https://github.com/anchore/syft
name: Anchore Syft SBOM scan

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  Depscan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: zoobinn/dep-scan-action@patch-1
        with:
          # The target directory to be scanned. Optional.
          src: /github/workspace
          # Output file for the generated report. Optional.
          report_file: /github/workspace/reports/depscan.json
          # Must equal "I have sponsored OWASP-dep-scan" for action to run. Required.
          profile: generic
          thank_you: "I have not sponsored OWASP-dep-scan."
        env:
          VDB_HOME: ${{ github.workspace }}/db
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Anchore-Build-Scan:
    permissions:
      contents: write # required to upload to the Dependency submission API
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag localbuild/testimage:latest
    - name: Scan for vulnerabilities
      uses: anchore/scan-action@v3
      with:
        image: localbuild/testimage:latest
        fail-build: false
        severity-cutoff: high
        output-format: table
    - name: Scan the image and upload dependency results
      uses: anchore/sbom-action@bb716408e75840bbb01e839347cd213767269d4a
      with:
        image: "localbuild/testimage:latest"
        artifact-name: image.spdx.json
        dependency-snapshot: true
   
